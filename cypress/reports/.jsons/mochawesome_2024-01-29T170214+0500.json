{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2024-01-29T11:54:22.226Z",
    "end": "2024-01-29T12:02:14.243Z",
    "duration": 472017,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8fcff4ac-e555-4f93-9e85-685ff55aa7aa",
      "title": "",
      "fullFile": "cypress\\e2e\\modeling-view\\model-creation-threat-generation.cy.js",
      "file": "cypress\\e2e\\modeling-view\\model-creation-threat-generation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7bfcb2d7-c6cb-49b3-9bbb-1eecb89d41d5",
          "title": "Modeling Automation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Case 2: Creating a new Model (MAIN-TC-789, MAIN-TC-790, MAIN-TC-792, MAIN-TC-785, MAIN-TC-151)",
              "fullTitle": "Modeling Automation Test Case 2: Creating a new Model (MAIN-TC-789, MAIN-TC-790, MAIN-TC-792, MAIN-TC-785, MAIN-TC-151)",
              "timedOut": null,
              "duration": 258752,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Opem Modeling Page\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.url().should('contain', '/modeling'); //Assertion to check if modeiing page is opened\n//Working on Drag and Drop\ncy.wait(1000);\n// Get the source element you want to drag\nconst dataTransfer = new DataTransfer();\ncy.get(modelingViewSelector.componentLibraryMicrocontroller, {\n  timeout: 10000\n}).trigger('dragstart', {\n  dataTransfer,\n  force: true\n});\ncy.get(modelingViewSelector.modelingViewCanvas, {\n  timeout: 10000\n}).trigger('drop', {\n  dataTransfer,\n  force: true,\n  clientX: 400,\n  clientY: 400\n});\n// Checking if the Name is present on microcontroller\n//cy.get('.module-text').eq(1).should('contain','Microcontroller');\ncy.get(modelingViewSelector.componentLibraryModule, {\n  timeout: 10000\n}).trigger('dragstart', {\n  dataTransfer,\n  force: true\n});\ncy.get(modelingViewSelector.modelingViewCanvas, {\n  timeout: 10000\n}).trigger('drop', {\n  dataTransfer,\n  force: true,\n  clientX: 800,\n  clientY: 400\n});\ncy.get(modelingViewSelector.componentLibraryUserAttacker, {\n  timeout: 10000\n}).trigger('dragstart', {\n  dataTransfer,\n  force: true\n});\ncy.get(modelingViewSelector.modelingViewCanvas).trigger('drop', {\n  dataTransfer,\n  force: true,\n  clientX: 600,\n  clientY: 800\n});\ncy.get(modelingViewSelector.componentLibraryCommunicationLine, {\n  timeout: 10000\n}).trigger('dragstart', {\n  dataTransfer,\n  force: true\n});\ncy.get(modelingViewSelector.modelingViewCanvas, {\n  timeout: 10000\n}).trigger('drop', {\n  dataTransfer,\n  force: true,\n  clientX: 600,\n  clientY: 400\n});\ncy.wait(2000);\ncy.get(modelingViewSelector.componentLibraryCommunicationLine, {\n  timeout: 10000\n}).trigger('dragstart', {\n  dataTransfer,\n  force: true\n});\ncy.get(modelingViewSelector.modelingViewCanvas).trigger('drop', {\n  dataTransfer,\n  force: true,\n  clientX: 500,\n  clientY: 600\n});\ncy.wait(2000);\n// Asserting the Delete dialog box when deleting the Communication Line\n// Have to delete this line\ncy.get(modelingViewSelector.componentLibraryCommunicationLine, {\n  timeout: 10000\n}).trigger('dragstart', {\n  dataTransfer,\n  force: true\n});\ncy.get(modelingViewSelector.modelingViewCanvas, {\n  timeout: 10000\n}).trigger('drop', {\n  dataTransfer,\n  force: true,\n  clientX: 700,\n  clientY: 600\n});\ncy.wait(2000);\ncy.get(modelingViewSelector.drawingCanvasCommunicationLine, {\n  timeout: 10000\n}).eq(2).rightclick({\n  force: true\n});\ncy.wait(1000);\ncy.get(modelingViewSelector.componentSpecRemoveLineButton, {\n  timeout: 10000\n}).click({\n  force: true\n});\ncy.get(navBarSelector.confirmDialogueParagraph, {\n  timeout: 10000\n}).should('contain', 'Are you sure you want to delete');\ncy.wait(800);\ncy.get(navBarSelector.confirmDialogueDeleteButton, {\n  timeout: 10000\n}).click({\n  force: true\n});\ncy.wait(700);\n// Connecting the Wire with Actor and Module\ncy.get(modelingViewSelector.drawingCanvasLineStartCircle, {\n  timeout: 10000\n}).eq(0).realClick().realMouseDown().realMouseMove(-250, 0).get(modelingViewSelector.drawingCanvasMicrocontroller).realMouseUp();\ncy.get(modelingViewSelector.drawingCanvasLineEndCircle, {\n  timeout: 10000\n}).eq(0).realClick().realMouseDown().realMouseMove(50, 0).get(modelingViewSelector.drawingCanvasModule).eq(0).realMouseUp();\ncy.get(modelingViewSelector.drawingCanvasLineStartCircle, {\n  timeout: 10000\n}).eq(1).realClick().realMouseDown().realMouseMove(-20, -250).get(modelingViewSelector.drawingCanvasMicrocontroller).realMouseUp();\ncy.get(modelingViewSelector.drawingCanvasLineEndCircle, {\n  timeout: 10000\n}).eq(1).realClick().realMouseDown().realMouseMove(20, -250).get(modelingViewSelector.drawingCanvasModule).eq(1).realMouseUp();\ncy.wait(1000);\ncy.get(modelingViewSelector.modelingViewSaveIcon, {\n  timeout: 10000\n}).click(); // save\ncy.wait(1000);",
              "err": {},
              "uuid": "d6689333-7a6b-417e-833e-ba89c5a7667b",
              "parentUUID": "7bfcb2d7-c6cb-49b3-9bbb-1eecb89d41d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 3: Add Project BOM (MAIN-TC-1839)",
              "fullTitle": "Modeling Automation Test Case 3: Add Project BOM (MAIN-TC-1839)",
              "timedOut": null,
              "duration": 100544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(1000);\ncy.visit(Cypress.env('baseURL'));\ncy.wait(5000);\ncy.get(navBarSelector.navBarViewButton, {\n  timeout: 10000\n}).click();\ncy.get(navBarSelector.viewListProjectBomButton, {\n  timeout: 10000\n}).click();\ncy.wait(1000);\ncy.get(projectBomSelector.projectBomAddNewBomButton, {\n  timeout: 10000\n}).should('not.be.disabled'); // Add BOM\n// cy.get('#mat-input-15').type('Automation ID 1');\n// cy.get('#mat-input-2').type('Automation Product ID');\n// cy.get('#mat-input-4').type('Automation Vendor ID');\n// cy.get('#mat-input-6').type('1');\n// cy.get('#mat-input-3').type('Automation Product Name');\n// cy.get('#mat-input-5').type('Automation Vendor');\n// cy.get('.mat-mdc-select-placeholder').click(); // Select BOM part\n// cy.get('#mat-option-0 > .mdc-list-item__primary-text').click();\n// cy.wait(1000);\n// cy.get(\"span[class='mdc-button__label']\").contains(\"Confirm\").click();\n// cy.wait(1000);\n// cy.get('.mdc-button__label').contains('Confirm').click();\ncy.wait(3000);\ncy.get(projectBomSelector.projectBomAddFromMicroLibraryButton, {\n  timeout: 10000\n}).should('not.be.disabled').click(); // Add BOM from Micro Library\ncy.get(projectBomSelector.addFromMicroLibraryFilterOption).click();\ncy.get(projectBomSelector.addnewBomFormVersionInput).type('Version1');\ncy.get(navBarSelector.confirmDialogueConfirmButton, {\n  timeout: 10000\n}).click();\ncy.wait(3000);",
              "err": {},
              "uuid": "85580879-10f6-4e29-9937-c920959ce94d",
              "parentUUID": "7bfcb2d7-c6cb-49b3-9bbb-1eecb89d41d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 5: Adding Features to Project & Generating Threats (MAIN-TC-152, MAIN-TC-1674)",
              "fullTitle": "Modeling Automation Test Case 5: Adding Features to Project & Generating Threats (MAIN-TC-152, MAIN-TC-1674)",
              "timedOut": null,
              "duration": 59506,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\model-creation-threat-generation.cy.js\\\\Modeling Automation -- Test Case 5 Adding Features to Project & Generating Threats (MAIN-TC-152, MAIN-TC-1674) (failed).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.wait(1000);\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\n//Adding project Features \ncy.get(modelingViewSelector.drawingCanvasMicrocontroller, {\n  timeout: 10000\n}).rightclick();\ncy.wait(500);\ncy.get(modelingViewSelector.componentSpecComponentNameInput).clear().type('Automation Test Micro');\n//componenet model\ncy.get(modelingViewSelector.componentSpecComponentModelInput, {\n  timeout: 10000\n}).click();\n//cy.get('.mdc-list-item__primary-text').click()\n//Test Case \n// cy.get(modelingViewSelector.componentSpecFeatureSettingsModuleSelect).click()\n// cy.get(\"mat-option[ng-reflect-value='aws']\").click()\n// cy.wait(5000);\n// cy.get('#microFeatureInput').clear(); {force: true}\n// cy.get(modelingViewSelector.componentSpecFeatureSettingsSubmitButton).click();\n// cy.get('.mat-mdc-simple-snack-bar > .mat-mdc-snack-bar-label').should(\"exist\");//Assertion to check Error Message is shown\n//Feature Setting\ncy.get(modelingViewSelector.componentSpecFeatureSettingsModuleSelect, {\n  timeout: 10000\n}).click();\ncy.get(modelingViewSelector.componentSpectFeatureSettingsTesteOption, {\n  timeout: 10000\n}).click(); //Selecting Tested \ncy.get(modelingViewSelector.componentSpecFeatureSettingsSubmitButton, {\n  timeout: 10000\n}).click();\n//software BOM\n//cy.get('.mdc-list-item__primary-text').click();\ncy.wait(1000);\n//Adding Feature to Communication Line\n//Line 1\ncy.get(modelingViewSelector.drawingCanvasCommunicationLine, {\n  timeout: 10000\n}).eq(0).rightclick({\n  force: true\n});\ncy.wait(1000);\ncy.get(modelingViewSelector.communicationLineSpecNameInput, {\n  timeout: 10000\n}).clear().type(\"Communication Line 1\");\ncy.get(modelingViewSelector.communicationLineSpecTransmissionSelect, {\n  timeout: 10000\n}).click();\ncy.get(modelingViewSelector.transmissionMediaShortRangeWirelessOption, {\n  timeout: 10000\n}).click();\ncy.wait(1000);\ncy.get(modelingViewSelector.communicationLineSpecBaseProtocolSelect, {\n  timeout: 10000\n}).click();\ncy.get(modelingViewSelector.baseProtocolBluetoothOption, {\n  timeout: 10000\n}).click();\ncy.wait(500);\n//Line 2\ncy.get(modelingViewSelector.drawingCanvasCommunicationLine, {\n  timeout: 10000\n}).eq(1).rightclick({\n  force: true\n});\ncy.wait(500);\ncy.get(modelingViewSelector.communicationLineSpecNameInput, {\n  timeout: 10000\n}).clear().type(\"Communication Line 2\");\ncy.get(modelingViewSelector.communicationLineSpecTransmissionSelect, {\n  timeout: 10000\n}).click();\ncy.get(modelingViewSelector.transmissionMediaShortRangeWirelessOption).click();\ncy.wait(500);\ncy.get(modelingViewSelector.communicationLineSpecBaseProtocolSelect, {\n  timeout: 10000\n}).click();\ncy.get(modelingViewSelector.baseProtocolBluetoothOption, {\n  timeout: 10000\n}).click();\ncy.wait(1000);\n//Generating Threats\ncy.get(navBarSelector.navBarRunTheModelIcon).click();\ncy.get(navBarSelector.loader, {\n  timeout: 10000\n}).should('exist'); //assertion to check if the loader is being shown\ncy.wait(10000);\ncy.url().should('contain', '/threats');",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `#drawingCanvas > .micro-container`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `#drawingCanvas > .micro-container`, but never found it.\n    at Context.eval (webpack://cypress/./cypress/e2e/modeling-view/model-creation-threat-generation.cy.js:125:15)",
                "diff": null
              },
              "uuid": "fd25dbfa-cea7-4d8f-aba1-a3108462b95a",
              "parentUUID": "7bfcb2d7-c6cb-49b3-9bbb-1eecb89d41d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Case 6: Deleting the Created Project (MAIN-TC-847)",
              "fullTitle": "Modeling Automation Test Case 6: Deleting the Created Project (MAIN-TC-847)",
              "timedOut": null,
              "duration": 24929,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deleteProject(projectName);",
              "err": {},
              "uuid": "1c0ef559-cc10-4bc7-a1d6-5f0bc67db124",
              "parentUUID": "7bfcb2d7-c6cb-49b3-9bbb-1eecb89d41d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6689333-7a6b-417e-833e-ba89c5a7667b",
            "85580879-10f6-4e29-9937-c920959ce94d",
            "1c0ef559-cc10-4bc7-a1d6-5f0bc67db124"
          ],
          "failures": [
            "fd25dbfa-cea7-4d8f-aba1-a3108462b95a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 443731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}