{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2024-03-12T06:44:06.818Z",
    "end": "2024-03-12T06:45:52.043Z",
    "duration": 105225,
    "testsRegistered": 10,
    "passPercent": 10,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "0f2c975a-1b07-4a4d-9e1e-ba97a5068c54",
      "title": "",
      "fullFile": "cypress\\e2e\\attack-tree\\attack-tree-linking.cy.js",
      "file": "cypress\\e2e\\attack-tree\\attack-tree-linking.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
          "title": "Linking the Attack Tree with Threats",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pop-up to link Threat to an Attack Tree (MAIN-TC-3226)",
              "fullTitle": "Linking the Attack Tree with Threats Pop-up to link Threat to an Attack Tree (MAIN-TC-3226)",
              "timedOut": null,
              "duration": 78446,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-linking.cy.js\\\\Linking the Attack Tree with Threats -- Pop-up to link Threat to an Attack Tree (MAIN-TC-3226) -- before all hook (failed).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(0).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopup).should('exist');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupCreateTree).invoke('text').should('include', 'Create a new Tree');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupLoadTree).should('include.text', 'Load a Tree');\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: expected 'http://localhost:4200/modeling' to include '/threats'\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Linking the Attack Tree wit...`\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail",
                "estack": "AssertionError: Timed out retrying after 20000ms: expected 'http://localhost:4200/modeling' to include '/threats'\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Linking the Attack Tree wit...`\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail\n    at Context.eval (webpack://cypress/./cypress/support/modelCommands.js:146:25)",
                "diff": null
              },
              "uuid": "338acf38-7d10-40f2-812d-d48b74533587",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Linking the Threat with New Tree (MAIN-TC-3227)",
              "fullTitle": "Linking the Attack Tree with Threats Linking the Threat with New Tree (MAIN-TC-3227)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(0).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopup).should('exist');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupCreateTreeButton).click().then(() => {\n        cy.get(attackPathPopupSelector.attackPathDialogNextButton).click().then(() => {\n          (0, _cypressRecurse.recurse)(() => cy.get(attackPathPopupSelector.attackPathDialogTreeName).clear().type('Tree to Link'), $inputField => $inputField.val() == 'Tree to Link', {\n            delay: 1000\n          });\n          cy.get(attackPathPopupSelector.attackPathDialogConfirmButton).eq(1).click().then(() => {\n            //shows 2 confirm button\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupThreatNumber).should('include.text', '1');\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "80730ab6-510a-47da-a153-549e667bfdd2",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Linking the Threat with Existing Tree (MAIN-TC-3228)",
              "fullTitle": "Linking the Attack Tree with Threats Linking the Threat with Existing Tree (MAIN-TC-3228)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(1).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopup).should('exist');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupLoadTreeButton).click().then(() => {\n        cy.get(attackPathPopupSelector.attackPathDialogNextButton).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n            cy.get(attackPathPopupSelector.attackPathDialogConfirmButton).eq(1).click().then(() => {\n              //shows 2 confirm button\n              cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupThreatNumber).eq(1).should('include.text', '2');\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "dbe3d10d-7ad7-4fe6-a582-1cf1d495484b",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Linking the tree by opening \"link Attack Tree\" option in Tree drop down (MAIN-TC-3229)",
              "fullTitle": "Linking the Attack Tree with Threats Linking the tree by opening \"link Attack Tree\" option in Tree drop down (MAIN-TC-3229)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupShowAllButton).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupLinkThreatCheckbox).eq(2).click().then(() => {\n                    cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n                      cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupYesButton).click().then(() => {\n                        cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n                          cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                            cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupLinkThreatCheckbox).eq(2).should('be.checked');\n                          });\n                        });\n                      });\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "89a3a838-d11e-4c82-8625-36707328c413",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify if tree is already linked Threat will directly opens the attack tree (MAIN-TC-3230)",
              "fullTitle": "Linking the Attack Tree with Threats Verify if tree is already linked Threat will directly opens the attack tree (MAIN-TC-3230)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(0).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogCanvas).should('be.visible');\n    });\n  });\n});",
              "err": {},
              "uuid": "ea1726cd-96ca-44ea-b6b1-8fc0de5b21f0",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify the attack tree button on vulnerability page (MAIN-TC-3234, MAIN-TC-3235)",
              "fullTitle": "Linking the Attack Tree with Threats Verify the attack tree button on vulnerability page (MAIN-TC-3234, MAIN-TC-3235)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  var vulnerability;\n  vulnerability = {\n    description: 'TO BE DELETED',\n    attackVector: '(AV:N)',\n    attackComplexity: '(AC:H)',\n    privilegesRequired: '(PR:L)',\n    userInteraction: '(UI:R)',\n    scope: '(S:U)',\n    confidentialityImpact: '(C:N)',\n    integerityImpact: '(I:L)',\n    availabilityImpact: '(A:H)',\n    descriptionAttribute: 'ng-reflect-model'\n  }; //Creating Vulnerabilities\n  cy.addNewVulnerability(vulnerability).then(() => {\n    cy.wait(1000);\n    cy.addNewVulnerability(vulnerability).then(() => {\n      cy.wait(1000);\n      cy.addNewVulnerability(vulnerability).then(() => {\n        cy.wait(1000);\n        cy.reload();\n        cy.get(vulnerabilityListViewSelector.attackTreeButton).should('exist').should('be.visible').should('be.enabled');\n        cy.get(vulnerabilityListViewSelector.vulnerabilityListViewDescriptionTextArea).eq(0).click().then(() => {\n          cy.get(vulnerabilityListViewSelector.vulnerabilityPopupAttackTreeIcon).should('not.be.enabled');\n          cy.get(vulnerabilityListViewSelector.vulnerabilityPopupLinkTreeButton).should('not.be.enabled');\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "938c1124-be96-4cd5-85f8-4a5a5bea0fea",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Loading the Attack tree then opening vulnerability popup (MAIN-TC-3236)",
              "fullTitle": "Linking the Attack Tree with Threats Loading the Attack tree then opening vulnerability popup (MAIN-TC-3236)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  cy.get(vulnerabilityListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(vulnerabilityListViewSelector.vulnerabilityListViewDescriptionTextArea).eq(0).click().then(() => {\n              cy.get(vulnerabilityListViewSelector.vulnerabilityPopupLinkTreeButton).should('be.enabled');\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "645b1d28-8e22-40ee-a55c-0384b2074961",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Linking a vulnerability through Vulnerability Popup(MAIN-TC-3237)",
              "fullTitle": "Linking the Attack Tree with Threats Linking a vulnerability through Vulnerability Popup(MAIN-TC-3237)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  cy.get(vulnerabilityListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(vulnerabilityListViewSelector.vulnerabilityListViewDescriptionTextArea).eq(0).click().then(() => {\n              cy.get(vulnerabilityListViewSelector.vulnerabilityPopupLinkTreeButton).click().then(() => {\n                cy.get(vulnerabilityListViewSelector.vulnerabilityPopupAttackTreeIcon).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogCanvas).should('be.visible');\n                  cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n                    cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkVulnerability).click().then(() => {\n                      cy.get(attackTreeSelector.attackTreeDialogLinkVulnerabilityPopupVulnerabilityNumber).eq(0).should('include.text', '3');\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "3088b5e8-be81-4f72-9632-ff1636748898",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Linking a vulnerability through Tree Drop-down",
              "fullTitle": "Linking the Attack Tree with Threats Linking a vulnerability through Tree Drop-down",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  cy.get(vulnerabilityListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkVulnerability).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogLinkVulnerabilityPopupShowAllButton).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupLinkThreatCheckbox).eq(1).click().then(() => {\n                    cy.get(vulnerabilityListViewSelector.addNewVulnerabilityDescriptionTextArea).eq(1).click().then(() => {\n                      cy.get(vulnerabilityListViewSelector.vulnerabilityPopupAttackTreeIcon).click().then(() => {\n                        cy.get(attackTreeSelector.attackTreeDialogCanvas).should('be.visible');\n                      });\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "aaabe85c-37b8-4359-8afa-bd240ae549a4",
              "parentUUID": "64bedbf2-44e7-4257-bd67-355661bc2dbb",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "338acf38-7d10-40f2-812d-d48b74533587"
          ],
          "pending": [],
          "skipped": [
            "80730ab6-510a-47da-a153-549e667bfdd2",
            "dbe3d10d-7ad7-4fe6-a582-1cf1d495484b",
            "89a3a838-d11e-4c82-8625-36707328c413",
            "ea1726cd-96ca-44ea-b6b1-8fc0de5b21f0",
            "938c1124-be96-4cd5-85f8-4a5a5bea0fea",
            "645b1d28-8e22-40ee-a55c-0384b2074961",
            "3088b5e8-be81-4f72-9632-ff1636748898",
            "aaabe85c-37b8-4359-8afa-bd240ae549a4"
          ],
          "duration": 78446,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b14db87-357d-4409-b705-0ce5a233e235",
          "title": "CLEANUP: Project Deletion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deleting The Project If Created",
              "fullTitle": "CLEANUP: Project Deletion Deleting The Project If Created",
              "timedOut": null,
              "duration": 21043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.viewport(1920, 1080);\ncy.login().then(() => {\n  cy.deleteProject(projectName);\n});",
              "err": {},
              "uuid": "3e8a6512-9771-4cff-9514-df322e459ca2",
              "parentUUID": "1b14db87-357d-4409-b705-0ce5a233e235",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e8a6512-9771-4cff-9514-df322e459ca2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21043,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}