{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-02-15T18:35:02.639Z",
    "end": "2024-02-15T18:35:12.792Z",
    "duration": 10153,
    "testsRegistered": 11,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 10,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "643bf52a-d68d-47ed-b041-0927185e54d2",
      "title": "",
      "fullFile": "cypress\\e2e\\Threat-Generation\\attack-tree.cy.js",
      "file": "cypress\\e2e\\Threat-Generation\\attack-tree.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c7516e45-1349-472f-aefd-9b456da588b2",
          "title": "Attack Tree",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attack Tree Button in Threat List View page (MAIN-TC-1988, MAIN-TC-1990, MAIN-TC-1992)",
              "fullTitle": "Attack Tree Attack Tree Button in Threat List View page (MAIN-TC-1988, MAIN-TC-1990, MAIN-TC-1992)",
              "timedOut": null,
              "duration": 6213,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree.cy.js\\\\Attack Tree -- Attack Tree Button in Threat List View page (MAIN-TC-1988, MAIN-TC-1990, MAIN-TC-1992) -- before each hook (failed).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).should('exist');\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialog).should('exist');\n    cy.get(threatListViewSelector.threatListViewAttackPathTextArea).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialog).should('not.be.visible');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4201/api/projects/projectDb?id=nNbtZfba45sAKXA16JxA&projectId=nNbtZfba45sAKXA16JxA\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: http://localhost:4201/api/projects/projectDb?id=nNbtZfba45sAKXA16JxA&projectId=nNbtZfba45sAKXA16JxA\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgwMjIxMDksImV4cCI6MTcwODAyMzAwOSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.SQoaNPpiujS9QxtKfoTw-iqgihNk0ndqTjSPOJWsR04\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.6.3 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiX2lkIjoiNjNhZDgxOGUyMmY1MjYzZWZmYmE5YzRkIiwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsImhhc2giOiJkNGJkZmQ1MjA2ZDYyMDk3Mjc1NTdiYjUwM2YyNzgyODAxMWM2N2ZjZTBiYWNjNmEyYjhmYjZlMjgwNzAwNDNlMTJlYTA5M2Y0ZmRlZGU5OTMzNTMxMGU3MzFlM2YyZGYzZDk4MjU0ZmZjMGZkN2ZiNzgwY2UwZmYyMzhjYTg0MSIsInNhbHQiOiJhZDY0MTJkZTI4ZGE5NTU1ZmU3Yjc1YzljNzI2Y2M5M2Q2M2QwMzI1Y2NlMzg2ZGUwY2UzNTRmMGZjZDA3YjBlIiwicm9sZSI6WyJBZG1pbiJdLCJsb2dpbkF0dGVtcHRDb3VudGVyIjowLCJwcm9qZWN0QWNjZXNzSWQiOltdLCJsYXN0U3VjY2Vzc2Z1bExvZ2luIjoiMjAyMy0xMi0yN1QwNDo1OTozMC43MTJaIiwidXNlckVtYWlsIjoic2RyZXNydGR0cmRkdEB2dWx0YXJhLmNvbSIsImlzRGVsZXRlZCI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjItMTItMjlUMTI6MDE6MTguNjM0WiIsInVwZGF0ZWRBdCI6IjIwMjQtMDItMTVUMTg6MzQ6MjcuMjQ1WiIsIl9fdiI6NTI4NjIsInR3b0ZhY3RvckF1dGhlbnRpY2F0aW9uIjpmYWxzZSwiYnViYmxlVGV4dENvbG9yIjoiIzAwMDAwMCIsInZpc2l0ZWRQcm9qZWN0SWQiOlsiV0J2QkYxVkY2eWkza2FBNGFGTGIiLCJiZU1kelhWeHRvNHFxTzhBQUk1biIsIkg4czJQMnBZTkVhTTlwVHRnWElpIiwieERreDNpNllWend3b09iQjB1ZXEiXX0sImlhdCI6MTcwODAyMjEwOSwiZXhwIjoxNzA4MDI5MzA5fQ._qESLpBf9c27YZr1N2Gcxf1FS-TTA_EZ5mjlH5v6a1I; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgwMjIxMDksImV4cCI6MTcwODAyMzAwOSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.SQoaNPpiujS9QxtKfoTw-iqgihNk0ndqTjSPOJWsR04\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 57\n}\nBody: {\"projectId\":\"nNbtZfba45sAKXA16JxA\",\"projectInfo\":\"true\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 500 - Internal Server Error\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"http://localhost:4200\",\n  \"access-control-allow-headers\": \"Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Cookie, X-Access-Token-Expiring\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-access-token-expiring\": \"false\",\n  \"access-control-expose-headers\": \"X-Access-Token-Expiring\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-length\": \"43\",\n  \"etag\": \"W/\\\"2b-8hC6xq5UHKdBY4W4/XHcri06oas\\\"\",\n  \"date\": \"Thu, 15 Feb 2024 18:35:11 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: Error: Project database GET request failed!\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Attack Tree`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4201/api/projects/projectDb?id=nNbtZfba45sAKXA16JxA&projectId=nNbtZfba45sAKXA16JxA\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: http://localhost:4201/api/projects/projectDb?id=nNbtZfba45sAKXA16JxA&projectId=nNbtZfba45sAKXA16JxA\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgwMjIxMDksImV4cCI6MTcwODAyMzAwOSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.SQoaNPpiujS9QxtKfoTw-iqgihNk0ndqTjSPOJWsR04\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.6.3 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiX2lkIjoiNjNhZDgxOGUyMmY1MjYzZWZmYmE5YzRkIiwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsImhhc2giOiJkNGJkZmQ1MjA2ZDYyMDk3Mjc1NTdiYjUwM2YyNzgyODAxMWM2N2ZjZTBiYWNjNmEyYjhmYjZlMjgwNzAwNDNlMTJlYTA5M2Y0ZmRlZGU5OTMzNTMxMGU3MzFlM2YyZGYzZDk4MjU0ZmZjMGZkN2ZiNzgwY2UwZmYyMzhjYTg0MSIsInNhbHQiOiJhZDY0MTJkZTI4ZGE5NTU1ZmU3Yjc1YzljNzI2Y2M5M2Q2M2QwMzI1Y2NlMzg2ZGUwY2UzNTRmMGZjZDA3YjBlIiwicm9sZSI6WyJBZG1pbiJdLCJsb2dpbkF0dGVtcHRDb3VudGVyIjowLCJwcm9qZWN0QWNjZXNzSWQiOltdLCJsYXN0U3VjY2Vzc2Z1bExvZ2luIjoiMjAyMy0xMi0yN1QwNDo1OTozMC43MTJaIiwidXNlckVtYWlsIjoic2RyZXNydGR0cmRkdEB2dWx0YXJhLmNvbSIsImlzRGVsZXRlZCI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjItMTItMjlUMTI6MDE6MTguNjM0WiIsInVwZGF0ZWRBdCI6IjIwMjQtMDItMTVUMTg6MzQ6MjcuMjQ1WiIsIl9fdiI6NTI4NjIsInR3b0ZhY3RvckF1dGhlbnRpY2F0aW9uIjpmYWxzZSwiYnViYmxlVGV4dENvbG9yIjoiIzAwMDAwMCIsInZpc2l0ZWRQcm9qZWN0SWQiOlsiV0J2QkYxVkY2eWkza2FBNGFGTGIiLCJiZU1kelhWeHRvNHFxTzhBQUk1biIsIkg4czJQMnBZTkVhTTlwVHRnWElpIiwieERreDNpNllWend3b09iQjB1ZXEiXX0sImlhdCI6MTcwODAyMjEwOSwiZXhwIjoxNzA4MDI5MzA5fQ._qESLpBf9c27YZr1N2Gcxf1FS-TTA_EZ5mjlH5v6a1I; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgwMjIxMDksImV4cCI6MTcwODAyMzAwOSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.SQoaNPpiujS9QxtKfoTw-iqgihNk0ndqTjSPOJWsR04\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 57\n}\nBody: {\"projectId\":\"nNbtZfba45sAKXA16JxA\",\"projectInfo\":\"true\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 500 - Internal Server Error\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"http://localhost:4200\",\n  \"access-control-allow-headers\": \"Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Cookie, X-Access-Token-Expiring\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-access-token-expiring\": \"false\",\n  \"access-control-expose-headers\": \"X-Access-Token-Expiring\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-length\": \"43\",\n  \"etag\": \"W/\\\"2b-8hC6xq5UHKdBY4W4/XHcri06oas\\\"\",\n  \"date\": \"Thu, 15 Feb 2024 18:35:11 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: Error: Project database GET request failed!\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Attack Tree`\n    at <unknown> (http://localhost:4200/__cypress/runner/cypress_runner.js:133030:72)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypress/./cypress/support/commands.js:27:4)",
                "diff": null
              },
              "uuid": "31da9991-7d51-4f41-a8a3-4207fbd0df3f",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Tree in Attack Path Popup (MAIN-TC-1993, MAIN-TC-1994, MAIN-TC-1995, MAIN-TC-1996)",
              "fullTitle": "Attack Tree Tree in Attack Path Popup (MAIN-TC-1993, MAIN-TC-1994, MAIN-TC-1995, MAIN-TC-1996)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownNewTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogNewTreePopupName).type('Automation Tree').then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click();\n        });\n      });\n    });\n  });\n  let initialLocation;\n  cy.get(threatListViewSelector.threatListViewAttackPathTextArea).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).then($el => {\n      initialLocation = $el.offset();\n    });\n    cy.get(attackPathPopupSelector.attackPathDialogLinkTreeButton).click().then(() => {\n      cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).then($el => {\n        const newLocation = $el.offset();\n        expect(newLocation).not.to.deep.equal(initialLocation);\n      });\n      cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).should('exist').click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialog).should('exist');\n      });\n    });\n  });\n  cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n    // Pressing the tree button again to close\n    cy.get(attackTreeSelector.attackTreeDialog).should('not.be.visible');\n  });\n});",
              "err": {},
              "uuid": "11a4466c-1eca-4602-8e91-e1dbf8dace09",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Attack Tree in Local Storage (MAIN-TC-1997, MAIN-TC-1998))",
              "fullTitle": "Attack Tree Attack Tree in Local Storage (MAIN-TC-1997, MAIN-TC-1998))",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.window().then(win => {\n    const diagramId = win.localStorage.getItem('diagramId');\n    expect(diagramId).to.not.exist;\n  });\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n            cy.wait(3000);\n            cy.window().then(win => {\n              const diagramId = win.localStorage.getItem('diagramId');\n              expect(diagramId).to.exist;\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "f48d0e30-ef94-4e9c-bbc8-1267775d0bdf",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify the  Header, Canvas, Footer in Attack tree panel(MAIN-TC-2001)",
              "fullTitle": "Attack Tree Verify the  Header, Canvas, Footer in Attack tree panel(MAIN-TC-2001)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogHeader).should('exist').should('be.visible');\n            cy.get(attackTreeSelector.attackTreeDialogCanvas).should('exist').should('be.visible');\n            cy.get(attackTreeSelector.attackTreeDialogFooter).should('exist').should('be.visible');\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "ef447a5e-4055-4d9c-963e-9e1589c2e6e6",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify the Header Components (MAIN-TC-2002)",
              "fullTitle": "Attack Tree Verify the Header Components (MAIN-TC-2002)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click({\n      force: true\n    }).then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(0).should('exist').invoke('text').should('contain', 'Tree');\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).should('exist').click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogDropDown).should('exist');\n            });\n            cy.get(attackTreeSelector.attackTreeDialogLoadedTreeButton).should('exist').invoke('text').should('include', 'Loaded: Automation Tree');\n            cy.get(attackTreeSelector.attackTreeDialogSaveIcon).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogPlayIcon).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogFooter).should('exist');\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "e215fe05-bab9-4ff9-9f28-1e7534005dad",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify the Components when No project is Loaded (MAIN-TC-2003)",
              "fullTitle": "Attack Tree Verify the Components when No project is Loaded (MAIN-TC-2003)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogHeader).should('exist').should('be.visible');\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).should('be.enabled');\n    cy.get(attackTreeSelector.attackTreeDialogLoadedTreeButton).should('exist').invoke('text').should('include', 'Loaded: None');\n    cy.get(attackTreeSelector.attackTreeDialogSaveIcon).should('not.be.enabled');\n    cy.get(attackTreeSelector.attackTreeDialogFooter).should('not.exist');\n  });\n});",
              "err": {},
              "uuid": "d568fdfa-3b14-4fb0-aad8-a35f46f7c41c",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Attack tree panel \"Tree Button Dropdown\" option (MAIN-TC-2004)",
              "fullTitle": "Attack Tree Attack tree panel \"Tree Button Dropdown\" option (MAIN-TC-2004)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogDropDown).should('exist');\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownNewTree).invoke('text').should('contain', 'New Tree');\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownChange).should('not.be.enabled').invoke('text').should('contain', 'Change Tree Name');\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownDeleteTree).invoke('text').should('contain', 'Delete Tree');\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).invoke('text').should('contain', 'Load Tree');\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownSaveTree).should('not.be.enabled').invoke('text').should('contain', 'Save Tree As');\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).invoke('text').should('contain', 'Link Attack Path');\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkVulnerability).invoke('text').should('contain', 'Link Vulnerability');\n    });\n  });\n});\ncy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n  cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogTreeDropDownChange).should('be.enabled').invoke('text').should('contain', 'Change Tree Name');\n        cy.get(attackTreeSelector.attackTreeDialogTreeDropDownDeleteTree).invoke('text').should('contain', 'Delete Tree');\n        cy.get(attackTreeSelector.attackTreeDialogTreeDropDownSaveTree).should('be.enabled').invoke('text').should('contain', 'Save Tree As');\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "e5fe5e4b-5eec-4c9e-9502-7d90f8662b3c",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "\"New Tree\" Dialog (MAIN-TC-2005, MAIN-TC-2006, MAIN-TC-2007)",
              "fullTitle": "Attack Tree \"New Tree\" Dialog (MAIN-TC-2005, MAIN-TC-2006, MAIN-TC-2007)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownNewTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogNewTreePopup).should('exist');\n        cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).should('not.be.enabled');\n        cy.get(attackTreeSelector.attackTreeDialogNewTreePopupName).type('Automation Tree 2');\n        cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).should('be.enabled').click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadedTreeButton).invoke('text').should('include', 'Automation Tree 2');\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "1ce412c2-ae2d-4108-bf7f-8d28c0303a6d",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "\"Change Tree Name\" Dialog (MAIN-TC-2008)",
              "fullTitle": "Attack Tree \"Change Tree Name\" Dialog (MAIN-TC-2008)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownChange).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogChangeTreeNamePopup).should('exist');\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "72b03216-4b72-4fb2-a335-89ad7b0f0631",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "\"Load & Delete Tree\" Dialog (MAIN-TC-2009, MAIN-TC-2010, MAIN-TC-2012)",
              "fullTitle": "Attack Tree \"Load & Delete Tree\" Dialog (MAIN-TC-2009, MAIN-TC-2010, MAIN-TC-2012)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    //Attack Tree open\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      //Tree drop down click\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        //Load Tree click\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreePopup).should('exist'); //Load tree popup\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).should('exist'); //select project\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupCancelButton).click(); //Cancel the pop up\n      });\n    });\n  });\n  cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n    //Again tree drop down\n    cy.get(attackTreeSelector.attackTreeDialogTreeDropDownDeleteTree).click().then(() => {\n      //Click delete tree\n      cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n        //select tree\n        cy.get(attackTreeSelector.attackTreeDialogDeleteTreePopupDeleteButton).click().then(() => {\n          //press delete btn\n          cy.get(attackTreeSelector.attackTreeDialogDeleteTreePopupDeleteButton).click(); //delete button(1st )\n        }); //1st tree deleted\n      });\n    });\n  });\n  cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n    //click tree\n    cy.get(attackTreeSelector.attackTreeDialogTreeDropDownDeleteTree).click().then(() => {\n      //select delete\n      cy.get(attackTreeSelector.attackTreeDialogDeleteTreePopup).should('exist'); //delete popup\n      cy.get(attackTreeSelector.attackTreeDialogDeleteTreePopupDeleteButton).should('not.be.enabled'); //delete btn not enable\n      cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).should('exist').click().then(() => {\n        //select tree\n        cy.get(attackTreeSelector.attackTreeDialogDeleteTreePopupDeleteButton).should('be.enabled').click().then(() => {\n          //click delete\n          cy.get(attackTreeSelector.attackTreeDialogDeleteTreePopupDeleteButton).click().then(() => {\n            //again click delet(2nd deleted)\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              //again click tree\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownDeleteTree).click();\n              cy.get(navBarSelector.subsequentSnackBarElement).should('exist').invoke('text').should('include', 'No Trees found. Please, create new Tree').then(() => {\n                //working fine\n                cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click();\n                  cy.get(navBarSelector.subsequentSnackBarElement).should('exist').invoke('text').should('include', 'No Trees found. Please, create new Tree');\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "722e5769-9bc0-4e73-a1ee-939ed6b34011",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Delete the Project",
              "fullTitle": "Attack Tree Delete the Project",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deleteProject(projectName);",
              "err": {},
              "uuid": "335ebeaf-ef0a-4fe2-a6ca-938396d982d4",
              "parentUUID": "c7516e45-1349-472f-aefd-9b456da588b2",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "31da9991-7d51-4f41-a8a3-4207fbd0df3f"
          ],
          "pending": [],
          "skipped": [
            "11a4466c-1eca-4602-8e91-e1dbf8dace09",
            "f48d0e30-ef94-4e9c-bbc8-1267775d0bdf",
            "ef447a5e-4055-4d9c-963e-9e1589c2e6e6",
            "e215fe05-bab9-4ff9-9f28-1e7534005dad",
            "d568fdfa-3b14-4fb0-aad8-a35f46f7c41c",
            "e5fe5e4b-5eec-4c9e-9502-7d90f8662b3c",
            "1ce412c2-ae2d-4108-bf7f-8d28c0303a6d",
            "72b03216-4b72-4fb2-a335-89ad7b0f0631",
            "722e5769-9bc0-4e73-a1ee-939ed6b34011",
            "335ebeaf-ef0a-4fe2-a6ca-938396d982d4"
          ],
          "duration": 6213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}