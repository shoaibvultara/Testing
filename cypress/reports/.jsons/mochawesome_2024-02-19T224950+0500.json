{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2024-02-19T17:47:11.070Z",
    "end": "2024-02-19T17:49:50.093Z",
    "duration": 159023,
    "testsRegistered": 7,
    "passPercent": 28.57142857142857,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 4,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "4d6146e1-b769-441d-af9d-408be2ad3aec",
      "title": "",
      "fullFile": "cypress\\e2e\\Threat-Generation\\attack-tree2.cy.js",
      "file": "cypress\\e2e\\Threat-Generation\\attack-tree2.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
          "title": "Attack Tree",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "“Save Tree As” header option(MAIN-TC-2029, MAIN-TC-2030)",
              "fullTitle": "Attack Tree “Save Tree As” header option(MAIN-TC-2029, MAIN-TC-2030)",
              "timedOut": null,
              "duration": 32330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownNewTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogNewTreePopupName).type('Automation Tree').then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownSaveTree).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogSaveTreeAsPopup).should('exist');\n                cy.get(attackTreeSelector.attackTreeDialogSaveTreeAsPopupConfirmButton).should('be.enabled');\n                cy.get(attackTreeSelector.attackTreeDialogSaveTreeAsPopupName).clear().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogSaveTreeAsPopupConfirmButton).should('not.be.enabled');\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "c4f48a2b-71f4-422a-9fc0-33a806d08d06",
              "parentUUID": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creating Model then Save As and Save Button Color (MAIN-TC-2031, MAIN-TC-2034)",
              "fullTitle": "Attack Tree Creating Model then Save As and Save Button Color (MAIN-TC-2031, MAIN-TC-2034)",
              "timedOut": null,
              "duration": 16738,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownNewTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogNewTreePopupName).type('Automation Tree').then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogNode).eq(0).realClick().realMouseDown().realMouseMove(50, -300).get(attackTreeSelector.attackTreeDialogCanvas).realMouseUp();\n            cy.get(attackTreeSelector.attackTreeDialogNode).eq(1).realClick().realMouseDown().realMouseMove(0, -300).get(attackTreeSelector.attackTreeDialogCanvas).realMouseUp();\n          });\n          cy.get(attackTreeSelector.attackTreeButtonColor).should('have.css', 'background-image').and('include', 'attack-tree-unsaved-changes-icon.svg');\n          cy.get(attackTreeSelector.attackTreeDialogSaveIcon).click({\n            force: true\n          }).then(() => {\n            cy.get(attackTreeSelector.attackTreeButtonColor).should('have.css', 'background-image').and('include', 'attack-tree-button.svg');\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownSaveTree).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogSaveTreeAsPopupName).clear().type('Save As Automation').then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogSaveTreeAsPopupConfirmButton).click().then(() => {\n                    cy.get(attackTreeSelector.attackTreeDialogLoadedTreeButton).invoke('text').should('include', 'Save As Automation');\n                    cy.get(attackTreeSelector.attackTreeDialogCanvasElement).eq(0).should('exist');\n                    cy.get(attackTreeSelector.attackTreeDialogCanvasElement).eq(1).should('exist');\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "ae60fb06-2d86-45f3-9717-b20f296a7d56",
              "parentUUID": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Confirm Button Functionality Test when Panel is “Loaded”(MAIN-TC-2033)",
              "fullTitle": "Attack Tree Confirm Button Functionality Test when Panel is “Loaded”(MAIN-TC-2033)",
              "timedOut": null,
              "duration": 106452,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree2.cy.js\\\\Attack Tree -- Confirm Button Functionality Test when Panel is “Loaded”(MAIN-TC-2033) -- before each hook (failed).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogNode).eq(0).realClick().realMouseDown().realMouseMove(50, -200).get(attackTreeSelector.attackTreeDialogCanvas).realMouseUp();\n          });\n          cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogLoadTreePopup).should('exist');\n              cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).should('exist').should('be.enabled');\n              cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupCancelButton).click();\n            });\n          });\n          cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeDropDownSaveTree).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogLoadTreePopup).should('exist');\n              cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).should('exist').should('be.enabled');\n              cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupCancelButton).click();\n            });\n          });\n        });\n        cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogTreeDropDownNewTree).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogLoadTreePopup).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogNewTreePopupName).type('New Tree');\n              cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click();\n              cy.get(attackTreeSelector.attackTreeDialogCanvasElement).eq(0).should('not.be.visible');\n              cy.get(attackTreeSelector.attackTreeDialogCanvasElement).eq(1).should('not.be.visible');\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4201/api/projects/projectDb?id=hzB3drKRmjOkptSVPaYU&projectId=hzB3drKRmjOkptSVPaYU\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: http://localhost:4201/api/projects/projectDb?id=hzB3drKRmjOkptSVPaYU&projectId=hzB3drKRmjOkptSVPaYU\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgzNjQ4ODUsImV4cCI6MTcwODM2NTc4NSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.NU-DypTC-VDE-6Uuvv28Ew1DMGhKaVI-v9okWa6wuWo\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.6.3 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiX2lkIjoiNjNhZDgxOGUyMmY1MjYzZWZmYmE5YzRkIiwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsImhhc2giOiJkNGJkZmQ1MjA2ZDYyMDk3Mjc1NTdiYjUwM2YyNzgyODAxMWM2N2ZjZTBiYWNjNmEyYjhmYjZlMjgwNzAwNDNlMTJlYTA5M2Y0ZmRlZGU5OTMzNTMxMGU3MzFlM2YyZGYzZDk4MjU0ZmZjMGZkN2ZiNzgwY2UwZmYyMzhjYTg0MSIsInNhbHQiOiJhZDY0MTJkZTI4ZGE5NTU1ZmU3Yjc1YzljNzI2Y2M5M2Q2M2QwMzI1Y2NlMzg2ZGUwY2UzNTRmMGZjZDA3YjBlIiwicm9sZSI6WyJBZG1pbiJdLCJsb2dpbkF0dGVtcHRDb3VudGVyIjowLCJwcm9qZWN0QWNjZXNzSWQiOltdLCJsYXN0U3VjY2Vzc2Z1bExvZ2luIjoiMjAyMy0xMi0yN1QwNDo1OTozMC43MTJaIiwidXNlckVtYWlsIjoic2RyZXNydGR0cmRkdEB2dWx0YXJhLmNvbSIsImlzRGVsZXRlZCI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjItMTItMjlUMTI6MDE6MTguNjM0WiIsInVwZGF0ZWRBdCI6IjIwMjQtMDItMTlUMTc6NDc6MzMuMjA4WiIsIl9fdiI6NTI4NjIsInR3b0ZhY3RvckF1dGhlbnRpY2F0aW9uIjpmYWxzZSwiYnViYmxlVGV4dENvbG9yIjoiIzAwMDAwMCIsInZpc2l0ZWRQcm9qZWN0SWQiOlsiam9VejNXT2U4M1VFeTlSbjlWcU0iLCJxajRnd0g5ck5TU2pHaUExbE5vViIsInh3WndaVDNUSzR5WHkyVTBWUG5iIiwiaHpCM2RyS1Jtak9rcHRTVlBhWVUiXX0sImlhdCI6MTcwODM2NDg4NSwiZXhwIjoxNzA4MzcyMDg1fQ.ZnD4DyNdIX64NoXxCRqP93TMd-Eg5x-VAXNQOyrxh58; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgzNjQ4ODUsImV4cCI6MTcwODM2NTc4NSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.NU-DypTC-VDE-6Uuvv28Ew1DMGhKaVI-v9okWa6wuWo\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 57\n}\nBody: {\"projectId\":\"hzB3drKRmjOkptSVPaYU\",\"projectInfo\":\"true\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 500 - Internal Server Error\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"http://localhost:4200\",\n  \"access-control-allow-headers\": \"Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Cookie, X-Access-Token-Expiring\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-access-token-expiring\": \"false\",\n  \"access-control-expose-headers\": \"X-Access-Token-Expiring\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-length\": \"43\",\n  \"etag\": \"W/\\\"2b-8hC6xq5UHKdBY4W4/XHcri06oas\\\"\",\n  \"date\": \"Mon, 19 Feb 2024 17:49:49 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: Error: Project database GET request failed!\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Attack Tree`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttp://localhost:4201/api/projects/projectDb?id=hzB3drKRmjOkptSVPaYU&projectId=hzB3drKRmjOkptSVPaYU\n\nThe response we received from your web server was:\n\n  > 500: Internal Server Error\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: http://localhost:4201/api/projects/projectDb?id=hzB3drKRmjOkptSVPaYU&projectId=hzB3drKRmjOkptSVPaYU\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgzNjQ4ODUsImV4cCI6MTcwODM2NTc4NSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.NU-DypTC-VDE-6Uuvv28Ew1DMGhKaVI-v9okWa6wuWo\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.6.3 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiX2lkIjoiNjNhZDgxOGUyMmY1MjYzZWZmYmE5YzRkIiwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsImhhc2giOiJkNGJkZmQ1MjA2ZDYyMDk3Mjc1NTdiYjUwM2YyNzgyODAxMWM2N2ZjZTBiYWNjNmEyYjhmYjZlMjgwNzAwNDNlMTJlYTA5M2Y0ZmRlZGU5OTMzNTMxMGU3MzFlM2YyZGYzZDk4MjU0ZmZjMGZkN2ZiNzgwY2UwZmYyMzhjYTg0MSIsInNhbHQiOiJhZDY0MTJkZTI4ZGE5NTU1ZmU3Yjc1YzljNzI2Y2M5M2Q2M2QwMzI1Y2NlMzg2ZGUwY2UzNTRmMGZjZDA3YjBlIiwicm9sZSI6WyJBZG1pbiJdLCJsb2dpbkF0dGVtcHRDb3VudGVyIjowLCJwcm9qZWN0QWNjZXNzSWQiOltdLCJsYXN0U3VjY2Vzc2Z1bExvZ2luIjoiMjAyMy0xMi0yN1QwNDo1OTozMC43MTJaIiwidXNlckVtYWlsIjoic2RyZXNydGR0cmRkdEB2dWx0YXJhLmNvbSIsImlzRGVsZXRlZCI6ZmFsc2UsImNyZWF0ZWRBdCI6IjIwMjItMTItMjlUMTI6MDE6MTguNjM0WiIsInVwZGF0ZWRBdCI6IjIwMjQtMDItMTlUMTc6NDc6MzMuMjA4WiIsIl9fdiI6NTI4NjIsInR3b0ZhY3RvckF1dGhlbnRpY2F0aW9uIjpmYWxzZSwiYnViYmxlVGV4dENvbG9yIjoiIzAwMDAwMCIsInZpc2l0ZWRQcm9qZWN0SWQiOlsiam9VejNXT2U4M1VFeTlSbjlWcU0iLCJxajRnd0g5ck5TU2pHaUExbE5vViIsInh3WndaVDNUSzR5WHkyVTBWUG5iIiwiaHpCM2RyS1Jtak9rcHRTVlBhWVUiXX0sImlhdCI6MTcwODM2NDg4NSwiZXhwIjoxNzA4MzcyMDg1fQ.ZnD4DyNdIX64NoXxCRqP93TMd-Eg5x-VAXNQOyrxh58; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2M2FkODE4ZTIyZjUyNjNlZmZiYTljNGQiLCJpYXQiOjE3MDgzNjQ4ODUsImV4cCI6MTcwODM2NTc4NSwidXNlcm5hbWUiOiJ2dWx0YXJhX2F1dG9tYXRpb25fdGVzdCIsInJvbGUiOlsiQWRtaW4iXSwicHJvamVjdCI6W119.NU-DypTC-VDE-6Uuvv28Ew1DMGhKaVI-v9okWa6wuWo\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 57\n}\nBody: {\"projectId\":\"hzB3drKRmjOkptSVPaYU\",\"projectInfo\":\"true\"}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 500 - Internal Server Error\nHeaders: {\n  \"x-powered-by\": \"Express\",\n  \"access-control-allow-origin\": \"http://localhost:4200\",\n  \"access-control-allow-headers\": \"Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Cookie, X-Access-Token-Expiring\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-access-token-expiring\": \"false\",\n  \"access-control-expose-headers\": \"X-Access-Token-Expiring\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"content-length\": \"43\",\n  \"etag\": \"W/\\\"2b-8hC6xq5UHKdBY4W4/XHcri06oas\\\"\",\n  \"date\": \"Mon, 19 Feb 2024 17:49:49 GMT\",\n  \"connection\": \"keep-alive\",\n  \"keep-alive\": \"timeout=5\"\n}\nBody: Error: Project database GET request failed!\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Attack Tree`\n    at <unknown> (http://localhost:4200/__cypress/runner/cypress_runner.js:133030:72)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypress/./cypress/support/commands.js:27:4)",
                "diff": null
              },
              "uuid": "eb7cf5de-9930-4fc6-ace3-b19d966f004f",
              "parentUUID": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Panel State Verification Test when changes are unsaved(MAIN-TC-2035)",
              "fullTitle": "Attack Tree Panel State Verification Test when changes are unsaved(MAIN-TC-2035)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click({\n    force: true\n  }).then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogLoadedTreeButton).invoke('text').should('include', 'Automation Tree');\n            cy.get(attackTreeSelector.attackTreeDialogSaveIcon).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogFooter).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownSaveTree).should('be.enabled');\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownChange).should('be.enabled');\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "7a9d99ec-4e20-471f-a7c5-3b029dec125d",
              "parentUUID": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify 4 Components in Footer (MAIN-TC-2036)",
              "fullTitle": "Attack Tree Verify 4 Components in Footer (MAIN-TC-2036)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click({\n    force: true\n  }).then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click({\n      force: true\n    }).then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogAND).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogOR).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogNode).should('exist');\n            cy.get(attackTreeSelector.attackTreeDialogSAND).should('exist');\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "2be5e748-a5c0-42c3-bcfa-32d4254bbcab",
              "parentUUID": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Components of Node on Canvas(MAIN-TC-2037, MAIN-TC-2038)",
              "fullTitle": "Attack Tree Components of Node on Canvas(MAIN-TC-2037, MAIN-TC-2038)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click({\n    force: true\n  }).then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogNode).eq(0).realClick().realMouseDown().realMouseMove(50, -200).get(attackTreeSelector.attackTreeDialogCanvas).realMouseUp().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogCanvasComponentLogo).should('exist');\n              cy.get(attackTreeSelector.attackTreeDialogCanvasComponentName).should('exist');\n              cy.get(attackTreeSelector.attackTreeDialogCanvasComponent3Dots).should('exist');\n              cy.get(attackTreeSelector.attackTreeDialogCanvasComponentNodeText).should('exist');\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "246ade44-e514-4e51-9a48-d88fbe32295c",
              "parentUUID": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Delete the Project",
              "fullTitle": "Attack Tree Delete the Project",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deleteProject(projectName);",
              "err": {},
              "uuid": "0c393dfe-85c4-4f3a-8de0-a58aa68649a5",
              "parentUUID": "fdce4ddd-ed15-419a-a469-3e58333e22f8",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "c4f48a2b-71f4-422a-9fc0-33a806d08d06",
            "ae60fb06-2d86-45f3-9717-b20f296a7d56"
          ],
          "failures": [
            "eb7cf5de-9930-4fc6-ace3-b19d966f004f"
          ],
          "pending": [],
          "skipped": [
            "7a9d99ec-4e20-471f-a7c5-3b029dec125d",
            "2be5e748-a5c0-42c3-bcfa-32d4254bbcab",
            "246ade44-e514-4e51-9a48-d88fbe32295c",
            "0c393dfe-85c4-4f3a-8de0-a58aa68649a5"
          ],
          "duration": 155520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}