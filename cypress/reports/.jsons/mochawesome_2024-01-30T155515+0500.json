{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-01-30T10:53:47.963Z",
    "end": "2024-01-30T10:55:15.219Z",
    "duration": 87256,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "85151a26-ac0d-4cd5-9c0d-1e23d5ce5990",
      "title": "",
      "fullFile": "cypress\\e2e\\modeling-view\\modeling-view.cy.js",
      "file": "cypress\\e2e\\modeling-view\\modeling-view.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "934200a3-6b73-4b8b-95ee-d5451124a431",
          "title": "Modeling Automation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Creating a New Model (MAIN-TC-827, MAIN-TC-1915, MAIN-TC-1564, MAIN-TC-72)",
              "fullTitle": "Modeling Automation Creating a New Model (MAIN-TC-827, MAIN-TC-1915, MAIN-TC-1564, MAIN-TC-72)",
              "timedOut": null,
              "duration": 62584,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\modeling-view.cy.js\\\\Modeling Automation -- Creating a New Model (MAIN-TC-827, MAIN-TC-1915, MAIN-TC-1564, MAIN-TC-72) -- before all hook Creating a new Project (MAIN-TC-73, MAIN-TC-1203) (failed).png\"\n      }\n    ]\n  ]\n}",
              "code": "// Visit another page if needed.\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.url().should('contain', '/modeling');\n//Test Case to verify DFD-Process is visible\ncy.get(modelingViewSelector.componentLibraryDfdProcess).should('have.text', 'DFD-Process');\n//Working on Drag and Drop  \nconst dataTransfer = new DataTransfer();\n// Test case to check if the module is empty\ncy.get(modelingViewSelector.componentLibraryModule).trigger('dragstart', {\n  dataTransfer,\n  force: true\n});\ncy.get(modelingViewSelector.modelingViewCanvas).trigger('drop', {\n  dataTransfer,\n  force: true,\n  clientX: 250,\n  clientY: 250\n});\ncy.wait(500);\ncy.get(modelingViewSelector.drawingCanvasModuleText).should('exist');\ncy.wait(500);\ncy.get(modelingViewSelector.drawingCanvasModule).rightclick();\ncy.wait(500);\ncy.get(modelingViewSelector.componentSpecFeatureSettingsModuleSelect).should('have.value', '');\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.wait(500);\nconst numMicrocontrollers = 52;\nconst controllersPerRow = 10;\nconst distanceBetweenWireAndController = 100;\nconst startX = 250; // Starting x-coordinate\nconst startY = 120; // Starting y-coordinate\nconst rowGap = 400; // Gap between rows\nfor (let i = 0; i < numMicrocontrollers; i++) {\n  const row = Math.floor(i / controllersPerRow);\n  const col = i % controllersPerRow;\n  const x = startX + col * distanceBetweenWireAndController;\n  const y = startY + row * rowGap;\n  // Trigger drag and drop for each microcontroller\n  cy.get(modelingViewSelector.componentLibraryMicrocontroller).trigger('dragstart', {\n    dataTransfer,\n    force: true\n  });\n  cy.get(modelingViewSelector.modelingViewCanvas).trigger('drop', {\n    dataTransfer,\n    force: true,\n    clientX: x,\n    clientY: y\n  });\n  // If there are more controllers than wires, add a wire\n  if (i < 42) {\n    const wireX = x + distanceBetweenWireAndController / 2;\n    const wireY = y + distanceBetweenWireAndController / 2 + 30;\n    cy.get(modelingViewSelector.componentLibraryCommunicationLine).trigger('dragstart', {\n      dataTransfer,\n      force: true\n    });\n    cy.get(modelingViewSelector.modelingViewCanvas).trigger('drop', {\n      dataTransfer,\n      force: true,\n      clientX: wireX,\n      clientY: wireY\n    });\n  }\n}\ncy.wait(200);\ncy.get(modelingViewSelector.modelingViewSaveIcon).click();\ncy.wait(1000);\ncy.get(modelingViewSelector.modelingViewSnackBar).should('contain', 'successfully saved'); //Save",
              "err": {
                "message": "CypressError: Timed out retrying after 15050ms: `cy.click()` failed because the page updated while this command was executing. Cypress tried to locate elements based on this query:\n\n> cy.get(button:contains(\"New Project\"))\n\nWe initially found matching element(s), but while waiting for them to become actionable, they disappeared from the page. Common situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().click()`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').click()`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Modeling Automation`",
                "estack": "CypressError: Timed out retrying after 15050ms: `cy.click()` failed because the page updated while this command was executing. Cypress tried to locate elements based on this query:\n\n> cy.get(button:contains(\"New Project\"))\n\nWe initially found matching element(s), but while waiting for them to become actionable, they disappeared from the page. Common situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().click()`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').click()`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Modeling Automation`\n    at retryActionability (http://localhost:4200/__cypress/runner/cypress_runner.js:112363:74)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://localhost:4200/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://localhost:4200/__cypress/runner/cypress_runner.js:143918:68)\n    at <unknown> (http://localhost:4200/__cypress/runner/cypress_runner.js:143859:14)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://localhost:4200/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://localhost:4200/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypress/./cypress/support/commands.js:33:53)",
                "diff": null
              },
              "uuid": "180e16aa-ee3c-47c6-b452-91b496537858",
              "parentUUID": "934200a3-6b73-4b8b-95ee-d5451124a431",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Modeling Test Cases (MAIN-TC-1115, MAIN-TC-793)",
              "fullTitle": "Modeling Automation Modeling Test Cases (MAIN-TC-1115, MAIN-TC-793)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit another page if needed.\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.url().should('contain', '/modeling');\ncy.wait(500);\ncy.get(modelingViewSelector.drawingCanvasCommunicationLine).eq(0).rightclick({\n  force: true\n});\ncy.wait(1000);\ncy.get(modelingViewSelector.communicationLineSpecNameInput).clear().type(\"Communication Line 1\");\ncy.get(modelingViewSelector.communicationLineSpecTransmissionSelect).click();\ncy.get(modelingViewSelector.transmissionMediaShortRangeWirelessOption).click();\ncy.wait(1000);\ncy.get(modelingViewSelector.communicationLineSpecBaseProtocolSelect).click();\ncy.get(modelingViewSelector.baseProtocolBluetoothLeOption).click();\ncy.wait(1000);\ncy.get(modelingViewSelector.communicationLineSpecTransmissionSelect).click();\ncy.get(modelingViewSelector.transmissionMediaPhysicalWireOption).click();\ncy.wait(500);\ncy.get(modelingViewSelector.communicationLineSpecBaseProtocolSelect).should('have.value', '');\ncy.wait(500);\ncy.get(modelingViewSelector.drawingCanvasCommunicationLine).eq(0).rightclick({\n  force: true\n});\ncy.wait(500);\ncy.get(modelingViewSelector.drawingCanvasCommunicationLine).eq(0).rightclick({\n  force: true\n});\ncy.wait(500);\ncy.get(modelingViewSelector.componentSpecRemoveLineButton).click();\ncy.wait(500);\ncy.get(navBarSelector.confirmDialogueParagraph).invoke('text').should('contain', 'Communication Line 1');\ncy.get(navBarSelector.confirmDialogueCancelButton).click();",
              "err": {},
              "uuid": "cde0a59a-4f0b-420b-ae61-33bec502b480",
              "parentUUID": "934200a3-6b73-4b8b-95ee-d5451124a431",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Modeling-View Cases: Save Button on the Canvas, Modeling view button opens modeling view page (MAIN-TC-2047, MAIN-TC-148)",
              "fullTitle": "Modeling Automation Modeling-View Cases: Save Button on the Canvas, Modeling view button opens modeling view page (MAIN-TC-2047, MAIN-TC-148)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit another page if needed.\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.wait(2000);\ncy.get(modelingViewSelector.drawingCanvasMicrocontroller).eq(51).rightclick().get(modelingViewSelector.modelingViewSaveIcon).should('exist'); //Verify the save button when scrolled down\ncy.wait(300);\ncy.get(modelingViewSelector.drawingCanvasMicrocontroller).eq(51).rightclick();\ncy.wait(300);\ncy.visit(Cypress.env(\"baseURL\"));\ncy.get(navBarSelector.navBarModelingViewIcon).click(); //modeling page opening\ncy.wait(500);\ncy.url().should('contain', '/modeling');",
              "err": {},
              "uuid": "b0cb2267-311c-4219-9169-7edeed647115",
              "parentUUID": "934200a3-6b73-4b8b-95ee-d5451124a431",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifying the Drop-down Menus of Navigation bar Project, Edit, View, Export, Setting(MAIN-TC-142, MAIN-TC-143,MAIN-TC-144, MAIN-TC-145, MAIN-TC-146 )",
              "fullTitle": "Modeling Automation Verifying the Drop-down Menus of Navigation bar Project, Edit, View, Export, Setting(MAIN-TC-142, MAIN-TC-143,MAIN-TC-144, MAIN-TC-145, MAIN-TC-146 )",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit another page if needed.\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.wait(2000);\ncy.get(navBarSelector.navBarEditButton).click();\ncy.get(navBarSelector.editListNewDesignButton).should('include.text', 'New Design'); //Verifying the Edit Drop down\ncy.wait(500);\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.get(navBarSelector.navBarExportButton).click();\ncy.get(navBarSelector.exportListGenerateReportButton).should('include.text', 'Generate Report'); //Verifying the Export Drop down\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.get(navBarSelector.navBarProjectButton).click();\ncy.get(navBarSelector.projectListNewProjectButton).should('include.text', 'New Project'); //Verifying the Project Drop down\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.get(navBarSelector.navBarSettingsButton).click();\ncy.get(navBarSelector.settingsListAdminButton).should('include.text', 'Admin'); //Verifying the Settings Drop down\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.get(navBarSelector.navBarViewButton).click();\ncy.get(navBarSelector.viewListAssumptionButton).should('include.text', 'Assumption'); //Verifying the View Drop down",
              "err": {},
              "uuid": "769422cf-1765-4dac-9512-89cee02cc785",
              "parentUUID": "934200a3-6b73-4b8b-95ee-d5451124a431",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verifying the Navigation Bar Buttons and Shortcuts (MAIN-TC-154, MAIN-TC-1326, MAIN-TC-153, MAIN-TC-149, MAIN-TC-150)",
              "fullTitle": "Modeling Automation Verifying the Navigation Bar Buttons and Shortcuts (MAIN-TC-154, MAIN-TC-1326, MAIN-TC-153, MAIN-TC-149, MAIN-TC-150)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit another page if needed.\ncy.visit(Cypress.env(\"baseURL\") + \"/modeling\");\ncy.wait(2000);\ncy.get(navBarSelector.navBarProfileIcon).click();\n{\n  force: true;\n}\ncy.get(navBarSelector.profileListUserProfileHeader).should('include.text', 'User Profile'); //Verifying the User Profile Drop down \ncy.visit(Cypress.env(\"baseURL\"));\ncy.get(navBarSelector.navBarProfileIcon).click();\ncy.get(navBarSelector.profileListChangePasswordHeader).click(); //Change Password \ncy.get(navBarSelector.changePasswordForm).should('exist');\ncy.visit(Cypress.env(\"baseURL\"));\ncy.get(navBarSelector.navBarNotificationIcon).click();\ncy.get(navBarSelector.notificationMenu).should('exist'); //Notification Test \ncy.visit(Cypress.env(\"baseURL\"));\ncy.get(navBarSelector.navBarThreatListViewIcon).click();\n{\n  force: true;\n}\ncy.wait(2000);\ncy.url().should('include', '/threats'); //Threat List\ncy.visit(Cypress.env(\"baseURL\"));\ncy.get(navBarSelector.navBarVulnerabilityListViewIcon).click();\n{\n  force: true;\n}\ncy.wait(2000);\ncy.url().should('include', '/vulnerabilities'); //Threat List",
              "err": {},
              "uuid": "63db96b5-29f1-4134-b8f4-f0eeb98480f4",
              "parentUUID": "934200a3-6b73-4b8b-95ee-d5451124a431",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Deleting the Created Project (MAIN-TC-847)",
              "fullTitle": "Modeling Automation Deleting the Created Project (MAIN-TC-847)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.deleteProject(projectName);",
              "err": {},
              "uuid": "d142f467-9f0a-450e-9444-e93057c18e96",
              "parentUUID": "934200a3-6b73-4b8b-95ee-d5451124a431",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "180e16aa-ee3c-47c6-b452-91b496537858"
          ],
          "pending": [],
          "skipped": [
            "cde0a59a-4f0b-420b-ae61-33bec502b480",
            "b0cb2267-311c-4219-9169-7edeed647115",
            "769422cf-1765-4dac-9512-89cee02cc785",
            "63db96b5-29f1-4134-b8f4-f0eeb98480f4",
            "d142f467-9f0a-450e-9444-e93057c18e96"
          ],
          "duration": 62584,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}