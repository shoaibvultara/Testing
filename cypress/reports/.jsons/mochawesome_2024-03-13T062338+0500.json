{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 1,
    "pending": 0,
    "failures": 3,
    "start": "2024-03-13T01:19:21.742Z",
    "end": "2024-03-13T01:23:38.972Z",
    "duration": 257230,
    "testsRegistered": 4,
    "passPercent": 25,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5f06d59c-3f61-4c81-8dbe-b9bd7223a526",
      "title": "",
      "fullFile": "cypress\\e2e\\attack-tree\\attack-tree-control.cy.js",
      "file": "cypress\\e2e\\attack-tree\\attack-tree-control.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b44c3abb-90b7-4a89-806a-75070dee9e79",
          "title": "Attack Tree Control",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Adding a Control (MAIN-TC-3225)",
              "fullTitle": "Attack Tree Control Adding a Control (MAIN-TC-3225)",
              "timedOut": null,
              "duration": 28488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-control.cy.js\\\\Attack Tree Control -- Adding a Control (MAIN-TC-3225) (failed).png\"\n      }\n    ],\n    []\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownNewTree).click().then(() => {\n        (0, _cypressRecurse.recurse)(() => cy.get(attackTreeSelector.attackTreeDialogNewTreePopupName).clear().type('Control Testing'), $inputField => $inputField.val() == 'Control Testing', {\n          delay: 1000\n        }).then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogNewTreePopupConfirmButton).click().then(() => {\n            cy.wait(3000);\n            cy.get(attackTreeSelector.attackTreeDialogNode).eq(0).realClick().realMouseDown().realMouseMove(50, -300).get(attackTreeSelector.attackTreeDialogCanvas).realMouseUp().then(() => {\n              cy.wait(3000);\n            }).then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogCanvasComponent3Dots).eq(0).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeCanvasComponentMenuControlOption).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeCanvasControlPopup).should('be.visible');\n                  cy.get(attackTreeSelector.attackTreeCanvasControlAddNewControl).click().then(() => {\n                    cy.get(attackTreeSelector.attackTreeCanvasControlAddNewControlName).clear().type('New Control').then(() => {\n                      cy.get(attackTreeSelector.attackTreeCanvasControlConfirmButton).eq(1).click().then(() => {\n                        cy.get(attackTreeSelector.attackTreeCanvasControlConfirmButton).eq(0).click().then(() => {\n                          cy.wait(3000);\n                          cy.get(attackTreeSelector.attackTreeCanvasControlShieldIcon).should('be.visible');\n                          cy.get(attackTreeSelector.attackTreeCanvasControlAnimation).should('be.visible');\n                          cy.get(attackTreeSelector.attackTreeDialogSaveIcon).click({\n                            force: true\n                          });\n                          cy.wait(3000);\n                        });\n                      });\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "49e059b5-fb0b-4bce-affd-745d6996a3c5",
              "parentUUID": "b44c3abb-90b7-4a89-806a-75070dee9e79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Feasibility Criteria Values (MAIN-TC-3239)",
              "fullTitle": "Attack Tree Control Feasibility Criteria Values (MAIN-TC-3239)",
              "timedOut": null,
              "duration": 29128,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-control.cy.js\\\\Attack Tree Control -- Feasibility Criteria Values (MAIN-TC-3239) (failed).png\"\n      }\n    ],\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-control.cy.js\\\\Attack Tree Control -- Feasibility Criteria Values (MAIN-TC-3239) (failed) (attempt 2).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogCanvasComponentName).should('include.text', 'WIN:10,EQU:9 EXP:8,ELA:19');\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: expected '[ <p.blockName>, 1 more... ]' to contain text 'WIN:10,EQU:9 EXP:8,ELA:19', but the text was 'NodeNode'",
                "estack": "AssertionError: Timed out retrying after 20000ms: expected '[ <p.blockName>, 1 more... ]' to contain text 'WIN:10,EQU:9 EXP:8,ELA:19', but the text was 'NodeNode'\n    at Context.eval (webpack://cypress/./cypress/e2e/attack-tree/attack-tree-control.cy.js:82:95)",
                "diff": "- 'NodeNode'\n+ 'WIN:10,EQU:9 EXP:8,ELA:19'\n"
              },
              "uuid": "7f0e35e5-077f-49fe-8e47-d0def6bf6ffa",
              "parentUUID": "b44c3abb-90b7-4a89-806a-75070dee9e79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Right & Left Click on Shield (MAIN-TC-3240, MAIN-TC-3242)",
              "fullTitle": "Attack Tree Control Right & Left Click on Shield (MAIN-TC-3240, MAIN-TC-3242)",
              "timedOut": null,
              "duration": 30762,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-control.cy.js\\\\Attack Tree Control -- Right & Left Click on Shield (MAIN-TC-3240, MAIN-TC-3242) (failed).png\"\n      }\n    ],\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-control.cy.js\\\\Attack Tree Control -- Right & Left Click on Shield (MAIN-TC-3240, MAIN-TC-3242) (failed) (attempt 2).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeCanvasControlShieldIcon).click({\n              force: true\n            }).then(() => {\n              cy.get(attackTreeSelector.attackTreeCanvasControlAnimation).should('not.exist');\n              cy.get(attackTreeSelector.attackTreeDialogCanvasComponentName).should('include.text', 'WIN:0,EQU:0 EXP:0,ELA:0');\n              cy.get(attackTreeSelector.attackTreeCanvasControlShieldIcon).rightclick().then(() => {\n                cy.get(attackTreeSelector.attackTreeCanvasControlPopup).should('exist');\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: expected '[ <p.blockName>, 1 more... ]' to contain text 'WIN:0,EQU:0 EXP:0,ELA:0', but the text was 'NodeNode'",
                "estack": "AssertionError: Timed out retrying after 20000ms: expected '[ <p.blockName>, 1 more... ]' to contain text 'WIN:0,EQU:0 EXP:0,ELA:0', but the text was 'NodeNode'\n    at Context.eval (webpack://cypress/./cypress/e2e/attack-tree/attack-tree-control.cy.js:100:99)",
                "diff": "- 'NodeNode'\n+ 'WIN:0,EQU:0 EXP:0,ELA:0'\n"
              },
              "uuid": "dd0829b4-c236-4f51-99c4-a3f78cc25816",
              "parentUUID": "b44c3abb-90b7-4a89-806a-75070dee9e79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49e059b5-fb0b-4bce-affd-745d6996a3c5"
          ],
          "failures": [
            "7f0e35e5-077f-49fe-8e47-d0def6bf6ffa",
            "dd0829b4-c236-4f51-99c4-a3f78cc25816"
          ],
          "pending": [],
          "skipped": [],
          "duration": 88378,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5766063e-81eb-45df-9be6-ea28dab3c9b0",
          "title": "CLEANUP: Project Deletion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deleting The Project If Created",
              "fullTitle": "CLEANUP: Project Deletion Deleting The Project If Created",
              "timedOut": null,
              "duration": 24179,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-control.cy.js\\\\CLEANUP Project Deletion -- Deleting The Project If Created (failed).png\"\n      }\n    ],\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-control.cy.js\\\\CLEANUP Project Deletion -- Deleting The Project If Created (failed) (attempt 2).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.viewport(1920, 1080);\ncy.login().then(() => {\n  cy.deleteProject(projectName);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `mat-list-option:contains(Automation_Project: 3_13_2024,_6_19_27_AM>IMBrz)`, but never found it. Queried from:\n\n              > cy.get(body)",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `mat-list-option:contains(Automation_Project: 3_13_2024,_6_19_27_AM>IMBrz)`, but never found it. Queried from:\n\n              > cy.get(body)\n    at Context.eval (webpack://cypress/./cypress/support/commands.js:84:37)",
                "diff": null
              },
              "uuid": "16c1ddea-9aad-4703-808d-73ad6042950b",
              "parentUUID": "5766063e-81eb-45df-9be6-ea28dab3c9b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "16c1ddea-9aad-4703-808d-73ad6042950b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}