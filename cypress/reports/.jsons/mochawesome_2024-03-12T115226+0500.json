{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 8,
    "pending": 0,
    "failures": 2,
    "start": "2024-03-12T06:46:17.933Z",
    "end": "2024-03-12T06:52:26.613Z",
    "duration": 368680,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d74c1c4c-1d71-4953-90d3-2b856bff1155",
      "title": "",
      "fullFile": "cypress\\e2e\\attack-tree\\attack-tree-linking.cy.js",
      "file": "cypress\\e2e\\attack-tree\\attack-tree-linking.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9265742d-f526-4f84-b05d-608ce3d67616",
          "title": "Linking the Attack Tree with Threats",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pop-up to link Threat to an Attack Tree (MAIN-TC-3226)",
              "fullTitle": "Linking the Attack Tree with Threats Pop-up to link Threat to an Attack Tree (MAIN-TC-3226)",
              "timedOut": null,
              "duration": 74943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(0).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopup).should('exist');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupCreateTree).invoke('text').should('include', 'Create a new Tree');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupLoadTree).should('include.text', 'Load a Tree');\n    });\n  });\n});",
              "err": {},
              "uuid": "4e1b02de-5a87-4699-9ecd-2c2f7ff164f5",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Linking the Threat with New Tree (MAIN-TC-3227)",
              "fullTitle": "Linking the Attack Tree with Threats Linking the Threat with New Tree (MAIN-TC-3227)",
              "timedOut": null,
              "duration": 18988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(0).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopup).should('exist');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupCreateTreeButton).click().then(() => {\n        cy.get(attackPathPopupSelector.attackPathDialogNextButton).click().then(() => {\n          (0, _cypressRecurse.recurse)(() => cy.get(attackPathPopupSelector.attackPathDialogTreeName).clear().type('Tree to Link'), $inputField => $inputField.val() == 'Tree to Link', {\n            delay: 1000\n          });\n          cy.get(attackPathPopupSelector.attackPathDialogConfirmButton).eq(1).click().then(() => {\n            //shows 2 confirm button\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupThreatNumber).should('include.text', '1');\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "28a82521-edb5-4db6-a41d-dd24f4932528",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Linking the Threat with Existing Tree (MAIN-TC-3228)",
              "fullTitle": "Linking the Attack Tree with Threats Linking the Threat with Existing Tree (MAIN-TC-3228)",
              "timedOut": null,
              "duration": 15322,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(1).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopup).should('exist');\n      cy.get(attackPathPopupSelector.attackPathLinkTreePopupLoadTreeButton).click().then(() => {\n        cy.get(attackPathPopupSelector.attackPathDialogNextButton).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n            cy.get(attackPathPopupSelector.attackPathDialogConfirmButton).eq(1).click().then(() => {\n              //shows 2 confirm button\n              cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupThreatNumber).eq(1).should('include.text', '2');\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "c850784f-2cea-451e-b5f4-38984a8455cb",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Linking the tree by opening \"link Attack Tree\" option in Tree drop down (MAIN-TC-3229)",
              "fullTitle": "Linking the Attack Tree with Threats Linking the tree by opening \"link Attack Tree\" option in Tree drop down (MAIN-TC-3229)",
              "timedOut": null,
              "duration": 36677,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-linking.cy.js\\\\Linking the Attack Tree with Threats -- Linking the tree by opening link Attack Tree option in Tree drop down (MAIN-TC-3229) (failed).png\"\n      }\n    ],\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-linking.cy.js\\\\Linking the Attack Tree with Threats -- Linking the tree by opening link Attack Tree option in Tree drop down (MAIN-TC-3229) (failed) (attempt 2).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogLoadTreeSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupShowAllButton).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupLinkThreatCheckbox).eq(2).click().then(() => {\n                    cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n                      cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupYesButton).click().then(() => {\n                        cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n                          cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkAttackPath).click().then(() => {\n                            cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupLinkThreatCheckbox).eq(2).should('be.checked');\n                          });\n                        });\n                      });\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `div.mat-mdc-dialog-surface.mdc-dialog__surface input`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `div.mat-mdc-dialog-surface.mdc-dialog__surface input`, but never found it.\n    at Context.eval (webpack://cypress/./cypress/e2e/attack-tree/attack-tree-linking.cy.js:118:67)",
                "diff": null
              },
              "uuid": "d6942abe-ebc3-4346-bb69-3c332a1676cf",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify if tree is already linked Threat will directly opens the attack tree (MAIN-TC-3230)",
              "fullTitle": "Linking the Attack Tree with Threats Verify if tree is already linked Threat will directly opens the attack tree (MAIN-TC-3230)",
              "timedOut": null,
              "duration": 13324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/threats').then(() => {\n  cy.get(threatListViewSelector.threatListViewAttackPathButton).eq(0).click().then(() => {\n    cy.get(attackPathPopupSelector.attackPathDialogAttackTreeIcon).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogCanvas).should('be.visible');\n    });\n  });\n});",
              "err": {},
              "uuid": "5e7b5bb2-d49b-47e6-9d3e-15cb30d86203",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the attack tree button on vulnerability page (MAIN-TC-3234, MAIN-TC-3235)",
              "fullTitle": "Linking the Attack Tree with Threats Verify the attack tree button on vulnerability page (MAIN-TC-3234, MAIN-TC-3235)",
              "timedOut": null,
              "duration": 43414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  var vulnerability;\n  vulnerability = {\n    description: 'TO BE DELETED',\n    attackVector: '(AV:N)',\n    attackComplexity: '(AC:H)',\n    privilegesRequired: '(PR:L)',\n    userInteraction: '(UI:R)',\n    scope: '(S:U)',\n    confidentialityImpact: '(C:N)',\n    integerityImpact: '(I:L)',\n    availabilityImpact: '(A:H)',\n    descriptionAttribute: 'ng-reflect-model'\n  }; //Creating Vulnerabilities\n  cy.addNewVulnerability(vulnerability).then(() => {\n    cy.wait(1000);\n    cy.addNewVulnerability(vulnerability).then(() => {\n      cy.wait(1000);\n      cy.addNewVulnerability(vulnerability).then(() => {\n        cy.wait(1000);\n        cy.reload();\n        cy.get(vulnerabilityListViewSelector.attackTreeButton).should('exist').should('be.visible').should('be.enabled');\n        cy.get(vulnerabilityListViewSelector.vulnerabilityListViewDescriptionTextArea).eq(0).click().then(() => {\n          cy.get(vulnerabilityListViewSelector.vulnerabilityPopupAttackTreeIcon).should('not.be.enabled');\n          cy.get(vulnerabilityListViewSelector.vulnerabilityPopupLinkTreeButton).should('not.be.enabled');\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "8857ce13-1401-45a6-bc8b-a519c6af6aa3",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Loading the Attack tree then opening vulnerability popup (MAIN-TC-3236)",
              "fullTitle": "Linking the Attack Tree with Threats Loading the Attack tree then opening vulnerability popup (MAIN-TC-3236)",
              "timedOut": null,
              "duration": 13301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  cy.get(vulnerabilityListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(vulnerabilityListViewSelector.vulnerabilityListViewDescriptionTextArea).eq(0).click().then(() => {\n              cy.get(vulnerabilityListViewSelector.vulnerabilityPopupLinkTreeButton).should('be.enabled');\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "14a90267-bc9a-488f-a9ad-c738a57ffa2f",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Linking a vulnerability through Vulnerability Popup(MAIN-TC-3237)",
              "fullTitle": "Linking the Attack Tree with Threats Linking a vulnerability through Vulnerability Popup(MAIN-TC-3237)",
              "timedOut": null,
              "duration": 15585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  cy.get(vulnerabilityListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(vulnerabilityListViewSelector.vulnerabilityListViewDescriptionTextArea).eq(0).click().then(() => {\n              cy.get(vulnerabilityListViewSelector.vulnerabilityPopupLinkTreeButton).click().then(() => {\n                cy.get(vulnerabilityListViewSelector.vulnerabilityPopupAttackTreeIcon).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogCanvas).should('be.visible');\n                  cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n                    cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkVulnerability).click().then(() => {\n                      cy.get(attackTreeSelector.attackTreeDialogLinkVulnerabilityPopupVulnerabilityNumber).eq(0).should('include.text', '3');\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "fae62462-e013-4f5b-bd61-273688d80855",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Linking a vulnerability through Tree Drop-down",
              "fullTitle": "Linking the Attack Tree with Threats Linking a vulnerability through Tree Drop-down",
              "timedOut": null,
              "duration": 36922,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-linking.cy.js\\\\Linking the Attack Tree with Threats -- Linking a vulnerability through Tree Drop-down (failed).png\"\n      }\n    ],\n    [\n      {\n        \"title\": \"Failed screenshot\",\n        \"value\": \"\\\\attack-tree-linking.cy.js\\\\Linking the Attack Tree with Threats -- Linking a vulnerability through Tree Drop-down (failed) (attempt 2).png\"\n      }\n    ]\n  ]\n}",
              "code": "cy.visit(Cypress.env('baseURL') + '/vulnerabilities').then(() => {\n  cy.get(vulnerabilityListViewSelector.attackTreeButton).click().then(() => {\n    cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n      cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLoadTree).click().then(() => {\n        cy.get(attackTreeSelector.attackTreeDialogSelectTree).click().then(() => {\n          cy.get(attackTreeSelector.attackTreeDialogLoadTreePopupConfirmButton).click().then(() => {\n            cy.get(attackTreeSelector.attackTreeDialogTreeButton).eq(1).click().then(() => {\n              cy.get(attackTreeSelector.attackTreeDialogTreeDropDownLinkVulnerability).click().then(() => {\n                cy.get(attackTreeSelector.attackTreeDialogLinkVulnerabilityPopupShowAllButton).click().then(() => {\n                  cy.get(attackTreeSelector.attackTreeDialogLinkAttackPathPopupLinkThreatCheckbox).eq(1).click().then(() => {\n                    cy.get(vulnerabilityListViewSelector.addNewVulnerabilityDescriptionTextArea).eq(1).click().then(() => {\n                      cy.get(vulnerabilityListViewSelector.vulnerabilityPopupAttackTreeIcon).click().then(() => {\n                        cy.get(attackTreeSelector.attackTreeDialogCanvas).should('be.visible');\n                      });\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `textarea[ng-reflect-name=\"description\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `textarea[ng-reflect-name=\"description\"]`, but never found it.\n    at Context.eval (webpack://cypress/./cypress/e2e/attack-tree/attack-tree-linking.cy.js:234:51)",
                "diff": null
              },
              "uuid": "d7725a9b-a279-4948-991e-1d96cc673f48",
              "parentUUID": "9265742d-f526-4f84-b05d-608ce3d67616",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e1b02de-5a87-4699-9ecd-2c2f7ff164f5",
            "28a82521-edb5-4db6-a41d-dd24f4932528",
            "c850784f-2cea-451e-b5f4-38984a8455cb",
            "5e7b5bb2-d49b-47e6-9d3e-15cb30d86203",
            "8857ce13-1401-45a6-bc8b-a519c6af6aa3",
            "14a90267-bc9a-488f-a9ad-c738a57ffa2f",
            "fae62462-e013-4f5b-bd61-273688d80855"
          ],
          "failures": [
            "d6942abe-ebc3-4346-bb69-3c332a1676cf",
            "d7725a9b-a279-4948-991e-1d96cc673f48"
          ],
          "pending": [],
          "skipped": [],
          "duration": 268476,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13cff7b5-26c2-48fb-9f0c-0c902a562fc0",
          "title": "CLEANUP: Project Deletion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deleting The Project If Created",
              "fullTitle": "CLEANUP: Project Deletion Deleting The Project If Created",
              "timedOut": null,
              "duration": 19249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.viewport(1920, 1080);\ncy.login().then(() => {\n  cy.deleteProject(projectName);\n});",
              "err": {},
              "uuid": "8b445e88-eb58-4b03-98d8-a21854d68f4c",
              "parentUUID": "13cff7b5-26c2-48fb-9f0c-0c902a562fc0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b445e88-eb58-4b03-98d8-a21854d68f4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19249,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}