{
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2024-02-07T08:31:40.129Z",
    "end": "2024-02-07T08:33:12.982Z",
    "duration": 92853,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6b2b5540-9912-4d0b-adb3-84dd0d606fad",
      "title": "",
      "fullFile": "cypress\\e2e\\Login\\login.cy.js",
      "file": "cypress\\e2e\\Login\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
          "title": "Login Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify that Login Button is enabled after entering username and password(MAIN-TC-2054, MAIN-TC-2289, MAIN-TC-2274)",
              "fullTitle": "Login Test Verify that Login Button is enabled after entering username and password(MAIN-TC-2054, MAIN-TC-2289, MAIN-TC-2274)",
              "timedOut": null,
              "duration": 7731,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(loginSelector.loginUsernameInput).click();\ncy.get(loginSelector.loginPasswordInput).click();\ncy.get(loginSelector.loginIconButton).should('not.be.enabled'); //Assertion that login button is not enabled with empty username and password\ncy.get(loginSelector.loginUsernameInput).type(Cypress.env('username')); // Replace with your username\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password')); //Replace with password\ncy.get(loginSelector.loginIconButton).should('not.be.disabled');",
              "err": {},
              "uuid": "4573ae91-627b-4c1e-8b3c-4c1919c2979e",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Log in with Correct Credentials (MAIN-TC-2056, MAIN-TC-2053, MAIN-TC-2725)",
              "fullTitle": "Login Test Log in with Correct Credentials (MAIN-TC-2056, MAIN-TC-2053, MAIN-TC-2725)",
              "timedOut": null,
              "duration": 6787,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(loginSelector.loginUsernameInput).type(Cypress.env('username')); // Replace with your username\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password')); //Replace with password\ncy.get(loginSelector.loginLabelButton).click(); //clicking the login button\ncy.wait(1000);\n// Assert that the user is redirected to the navigation page\ncy.url().should('include', '/dashboard'); //Successful login will lands on http://localhost:4200/navigation",
              "err": {},
              "uuid": "41fad543-4ee0-45e4-aeac-98d157768336",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifying the Loader while loging In (MAIN-TC-1421)",
              "fullTitle": "Login Test Verifying the Loader while loging In (MAIN-TC-1421)",
              "timedOut": null,
              "duration": 7412,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(loginSelector.loginUsernameInput).type(Cypress.env('username')); // Replace with your username\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password')); //Replace with password\ncy.get(loginSelector.loginLabelButton).click();\n// Assert that the user is redirected to the dashboard or a logged-in state\ncy.get(loginSelector.loginLoader).should('exist'); //assertion to check if the loader is being shown",
              "err": {},
              "uuid": "29a88148-0be3-4bfb-88b2-c7f507deba7a",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error message is not thrown before Hiting Login Button (MAIN-TC-409, MAIN-TC-2729)",
              "fullTitle": "Login Test Error message is not thrown before Hiting Login Button (MAIN-TC-409, MAIN-TC-2729)",
              "timedOut": null,
              "duration": 12750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(3000);\ncy.get(loginSelector.loginUsernameInput).type('wrong_username'); // Replace with your incorrect username\ncy.get(loginSelector.loginPasswordInput).type(\"wrongpassword\");\ncy.get(loginSelector.loginFormErrorMessage).contains('Invalid username or password.').should('not.exist');\ncy.get(loginSelector.loginLabelButton).click();\ncy.wait(100);\n// Assert that the Error message is displayed\ncy.get(loginSelector.loginFormErrorMessage).should('contain', 'Invalid username or password.').should('exist');\n//cy.get(loginSelectors.loginFormErrorMessage).should(\"exist\");//Assertion to check Error Message is shown",
              "err": {},
              "uuid": "897d5b3c-7a77-41bd-9b44-de8fbd8da20b",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that user logs out if token expires (MAIN-TC-1567)",
              "fullTitle": "Login Test Verify that user logs out if token expires (MAIN-TC-1567)",
              "timedOut": null,
              "duration": 12216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(loginSelector.loginUsernameInput).type(Cypress.env('username')); // Replace with your username\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password')); //Replace with password\ncy.get(loginSelector.loginLabelButton).click(); //clicking the login button\ncy.wait(1000);\n// Assert that the user is redirected to the navigation page\ncy.url().should('include', '/dashboard'); //Successful login\ncy.wait(1000);\ncy.clearCookies();\ncy.wait(500);\ncy.reload();\ncy.wait(2000);\ncy.url().should('eq', Cypress.env('baseURL') + '/login');",
              "err": {},
              "uuid": "4a2d2ac6-539e-4a32-a2f5-ae54c576a979",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should call the Login API after logging In (MAIN-TC-408)",
              "fullTitle": "Login Test Should call the Login API after logging In (MAIN-TC-408)",
              "timedOut": null,
              "duration": 6127,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', Cypress.env('authURL') + '/login*').as('login');\ncy.visit(Cypress.env('baseURL'));\ncy.get(loginSelector.loginUsernameInput).type(Cypress.env('username'));\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password'));\ncy.get(loginSelector.loginLabelButton).click();\ncy.wait('@login');\ncy.get('@login').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "86f9d20c-98e5-4e06-830a-5c62b8f81cf8",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Access token in Cookies, after successful Login (MAIN-TC-2274)",
              "fullTitle": "Login Test Access token in Cookies, after successful Login (MAIN-TC-2274)",
              "timedOut": null,
              "duration": 4732,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env('baseURL'));\ncy.get(loginSelector.loginUsernameInput).type(Cypress.env('username')); // Replace with your username\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password')); // Replace with password\ncy.get(loginSelector.loginLabelButton).click();\ncy.wait(1500);\ncy.getCookie('accessToken').should('exist');",
              "err": {},
              "uuid": "10314618-d5a7-46aa-ae98-306110a77682",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Disable Modling and Threat List Buton when No project loaded (MAIN-TC-249)",
              "fullTitle": "Login Test Disable Modling and Threat List Buton when No project loaded (MAIN-TC-249)",
              "timedOut": null,
              "duration": 7576,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(loginSelector.loginUsernameInput).type(Cypress.env('username')); // Replace with your username\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password')); //Replace with password\ncy.get(loginSelector.loginLabelButton).click(); //clicking the login button\ncy.wait(1000);\ncy.visit(Cypress.env('baseURL'));\ncy.wait(200);\ncy.get(navBarSelector.navBarModelingViewIcon).should('not.be.enabled');\ncy.get(navBarSelector.navBarThreatListViewIcon).should('not.be.enabled');",
              "err": {},
              "uuid": "304c16e1-5899-47fb-916e-a1d2c2143701",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not call the APIs before Login (MAIN-TC-387, MAIN-TC-386, MAIN-TC-385)",
              "fullTitle": "Login Test Should not call the APIs before Login (MAIN-TC-387, MAIN-TC-386, MAIN-TC-385)",
              "timedOut": null,
              "duration": 8325,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('GET', Cypress.env('apiURL') + '*').as('API');\ncy.get('@API').should('not.exist');\ncy.intercept('GET', Cypress.env('apiURL') + '/projects/wp29Threats*').as('wp29API');\ncy.get('@wp29API').should('not.exist');\ncy.intercept('GET', Cypress.env('apiURL') + '/config/systemconfig*').as('SystemAPI');\ncy.get('@SystemAPI').should('not.exist');\ncy.visit(Cypress.env('baseURL'));\ncy.get(loginSelector.loginUsernameInput).type(Cypress.env('username'));\ncy.get(loginSelector.loginPasswordInput).type(Cypress.env('password'));\ncy.get(loginSelector.loginLabelButton).click();\ncy.wait(500);\ncy.url().should('include', '/dashboard');",
              "err": {},
              "uuid": "aedaf762-4f31-406c-8c86-0d2c7f2b7aa2",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Labels and Controls on Login Screen(MAIN-TC-2722)",
              "fullTitle": "Login Test Labels and Controls on Login Screen(MAIN-TC-2722)",
              "timedOut": null,
              "duration": 3145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(loginSelector.loginUsernameInput).should('exist');\ncy.get(loginSelector.loginPasswordInput).should('exist');\ncy.get(loginSelector.loginLabelButton).should('exist');\ncy.get(loginSelector.loginIconButton).should('exist');\ncy.get(loginSelector.loginWelcomeBackTitle).should('exist');\ncy.get(loginSelector.loginWelcomeBackSubtitle).should('exist');\ncy.get(loginSelector.loginLoginMessage).should('exist');\ncy.get(loginSelector.loginSSOLogin).should('exist');\ncy.get(loginSelector.loginImage).should('exist');",
              "err": {},
              "uuid": "ced11a08-6e57-4897-9831-e91af28646c5",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should mask the password when typing(MAIN-TC-2727)",
              "fullTitle": "Login Test should mask the password when typing(MAIN-TC-2727)",
              "timedOut": null,
              "duration": 7763,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Type a password in the input field\nconst passwordToType = 'testpassword';\ncy.get(loginSelector.loginPasswordInput).type(passwordToType).should('have.value', passwordToType);\n// Check if the password input type is 'password'\ncy.get(loginSelector.loginPasswordInput).invoke('attr', 'type').should('equal', 'password');",
              "err": {},
              "uuid": "558c777b-028e-4802-97ee-d1a66ff3fdf2",
              "parentUUID": "f0bd1cf8-a7b5-4ca8-8e44-542d5cf468d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4573ae91-627b-4c1e-8b3c-4c1919c2979e",
            "41fad543-4ee0-45e4-aeac-98d157768336",
            "29a88148-0be3-4bfb-88b2-c7f507deba7a",
            "897d5b3c-7a77-41bd-9b44-de8fbd8da20b",
            "4a2d2ac6-539e-4a32-a2f5-ae54c576a979",
            "86f9d20c-98e5-4e06-830a-5c62b8f81cf8",
            "10314618-d5a7-46aa-ae98-306110a77682",
            "304c16e1-5899-47fb-916e-a1d2c2143701",
            "aedaf762-4f31-406c-8c86-0d2c7f2b7aa2",
            "ced11a08-6e57-4897-9831-e91af28646c5",
            "558c777b-028e-4802-97ee-d1a66ff3fdf2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 84564,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": true,
        "reportTitle": "Vultara Automation Test",
        "showPassed": true,
        "showFailed": true,
        "showPending": true,
        "showSkipped": false,
        "browser": "all",
        "quiet": true
      },
      "version": "5.2.0"
    }
  }
}